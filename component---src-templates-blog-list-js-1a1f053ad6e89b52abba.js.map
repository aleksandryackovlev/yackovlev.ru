{"version":3,"sources":["webpack:///./src/templates/blog-list.js"],"names":["BlogList","pageContext","pageTitle","title","posts","pagination","current","total","marginBottom","isBold","component","fontSize","level","paddingBottom","map","index","id","date","description","tags","key","paddingTop","borderBottom","type","to","color","justify","xs","tag","href","align","Array","keys","page","disabled"],"mappings":"goBAgGeA,UAnFE,SAAC,GAAD,QACfC,YACSC,EAFM,EAEbC,MACAC,EAHa,EAGbA,MAHa,IAIbC,WAAcC,EAJD,EAICA,QAASC,EAJV,EAIUA,MAJV,OAOf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKJ,MAAOD,GAAa,qBACxBA,GACC,kBAAC,IAAD,CACEM,aAAa,IACbC,QAAM,EACNC,UAAU,QACVC,SAAS,IACTC,MAAO,GAENV,GAGL,kBAAC,IAAD,CAAKW,cAAc,OAChBT,EAAMU,KAAI,WAAyCC,GAAzC,IAAGC,EAAH,EAAGA,GAAIb,EAAP,EAAOA,MAAOc,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,YAAaC,EAAjC,EAAiCA,KAAjC,OACT,kBAAC,IAAD,CACEC,IAAKJ,EACLK,WAAYN,EAAQ,IAAM,OAC1BF,cAAc,IACdS,aAAa,WAEb,kBAAC,IAAD,CAAYZ,UAAU,SACpB,kBAAC,IAAD,CAAMa,KAAK,YAAYC,GAAE,IAAMR,GAC5Bb,IAGL,kBAAC,IAAD,CAAYsB,MAAM,aAAlB,aAAyCR,GACzC,kBAAC,IAAD,CAAYP,UAAU,YAAYF,aAAa,KAC5CU,GAEH,kBAAC,IAAD,CAAKQ,QAAQ,gBACX,kBAAC,IAAD,CAAQC,GAAG,QACT,kBAAC,IAAD,CAAQA,IAAE,GACPR,EAAKL,KAAI,SAAAc,GAAG,OACX,kBAAC,IAAD,CAAQL,KAAK,YAAYH,IAAKQ,EAAKC,KAAI,QAAUD,GAC9CA,QAKT,kBAAC,IAAD,CAAQD,GAAG,QACT,kBAAC,IAAD,CAAQE,KAAI,IAAMb,GAAlB,eAMTT,EAAQ,GACP,kBAAC,IAAD,CAAKM,cAAc,OACjB,kBAAC,IAAD,CAAYiB,MAAM,UACf,EAAIC,MAAMxB,EAAQ,GAAGyB,QAAQlB,KAAI,SAAAmB,GAAI,OACpC,kBAAC,IAAD,CACEC,SAAU5B,IAAY2B,EAAO,EAC7BV,KAAMjB,IAAY2B,EAAO,EAAI,YAAc,UAC3CJ,KAAI,KAAMI,EAAOA,EAAO,EAAI,KAE3BA,EAAO","file":"component---src-templates-blog-list-js-1a1f053ad6e89b52abba.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Layout from '../layout';\nimport SEO from '../seo';\n\nimport Typography from '../ui/typography';\nimport Box from '../ui/box';\nimport Link from '../ui/link';\nimport Button from '../ui/button';\nimport { Row, Column } from '../ui/grid';\nimport Hidden from '../ui/hidden';\n\nconst BlogList = ({\n  pageContext: {\n    title: pageTitle,\n    posts,\n    pagination: { current, total },\n  },\n}) => (\n  <Layout>\n    <SEO title={pageTitle || 'Thoughts on code'} />\n    {pageTitle && (\n      <Typography\n        marginBottom=\"l\"\n        isBold\n        component=\"title\"\n        fontSize=\"l\"\n        level={1}\n      >\n        {pageTitle}\n      </Typography>\n    )}\n    <Box paddingBottom=\"xxl\">\n      {posts.map(({ id, title, date, description, tags }, index) => (\n        <Box\n          key={id}\n          paddingTop={index ? 'm' : 'none'}\n          paddingBottom=\"l\"\n          borderBottom=\"primary\"\n        >\n          <Typography component=\"title\">\n            <Link type=\"secondary\" to={`/${id}`}>\n              {title}\n            </Link>\n          </Typography>\n          <Typography color=\"secondary\">Posted on {date}</Typography>\n          <Typography component=\"paragraph\" marginBottom=\"m\">\n            {description}\n          </Typography>\n          <Row justify=\"spaceBetween\">\n            <Column xs=\"auto\">\n              <Hidden xs>\n                {tags.map(tag => (\n                  <Button type=\"secondary\" key={tag} href={`/tag/${tag}`}>\n                    {tag}\n                  </Button>\n                ))}\n              </Hidden>\n            </Column>\n            <Column xs=\"auto\">\n              <Button href={`/${id}`}>Read</Button>\n            </Column>\n          </Row>\n        </Box>\n      ))}\n    </Box>\n    {total > 1 && (\n      <Box paddingBottom=\"xxl\">\n        <Typography align=\"center\">\n          {[...Array(total - 1).keys()].map(page => (\n            <Button\n              disabled={current === page + 1}\n              type={current === page + 1 ? 'secondary' : 'primary'}\n              href={`/${page ? page + 1 : ''}`}\n            >\n              {page + 1}\n            </Button>\n          ))}\n        </Typography>\n      </Box>\n    )}\n  </Layout>\n);\n\nBlogList.propTypes = {\n  pageContext: PropTypes.shape({\n    title: PropTypes.string,\n    posts: PropTypes.arrayOf(PropTypes.object),\n    pagination: PropTypes.shape({\n      current: PropTypes.number,\n      total: PropTypes.number,\n    }),\n  }).isRequired,\n};\n\nexport default BlogList;\n"],"sourceRoot":""}